package com.org.veera.inverse.mr.job;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.util.Tool;
import org.apache.hadoop.util.ToolRunner;

public class InverseIndexJob implements Tool {
	
	private Configuration conf;

	@Override
	public Configuration getConf() {
		return conf;
	}

	@Override
	public void setConf(Configuration conf) {
		this.conf=conf;

	}

	@Override
	public int run(String[] args) throws Exception {
		
		Job inverseJob = new Job(getConf());
		inverseJob.setJarByClass(getClass());
		inverseJob.setJobName("InverseIndex Job");
		inverseJob.setMapperClass(InverseMapper.class);
		inverseJob.setReducerClass(InverseReducer.class);
		inverseJob.setMapOutputKeyClass(Text.class);
		inverseJob.setOutputValueClass(Text.class);
		inverseJob.setOutputKeyClass(Text.class);
		inverseJob.setOutputValueClass(Text.class);
		
		FileInputFormat.setInputPaths(inverseJob, new Path(args[0]));
		FileOutputFormat.setOutputPath(inverseJob, new Path(args[1]));
		return inverseJob.waitForCompletion(true) == true ? 0 : -1;
	}

	public static void main(String[] args) throws Exception {
		ToolRunner.run(new Configuration(),new InverseIndexJob(),args);
	}

	

}
